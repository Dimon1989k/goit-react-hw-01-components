{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DM\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\\\u0423\\u0447\\u0435\\u0431\\u0430 GoIT\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Statistics\\\\Statistics.jsx\";\nimport React from 'react';\nimport css from './Statistics.module.css';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createColor = () => {\n  const color = 'rgba(' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ',' + Math.round(Math.random() * 255) + ',' + 0.7 + ')';\n  return color;\n};\n\nconst Statistics = _ref => {\n  let {\n    title,\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: css.statistics,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.stats__list,\n      children: stats.map(_ref2 => {\n        let {\n          id,\n          label,\n          percentage\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: css.stats,\n          style: {\n            backgroundColor: createColor()\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: css.label,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: css.percentage,\n            children: percentage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\nStatistics.propTypes = {\n  stats: propTypes.arrayOf(propTypes.shape({\n    id: propTypes.string.isRequired,\n    label: propTypes.string.isRequired,\n    percentage: propTypes.number.isRequired\n  })),\n  title: propTypes.string\n};\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["C:/Users/DM/OneDrive/Документы/Учеба GoIT/goit-react-hw-01-components/src/components/Statistics/Statistics.jsx"],"names":["React","css","propTypes","createColor","color","Math","round","random","Statistics","title","stats","statistics","stats__list","map","id","label","percentage","backgroundColor","arrayOf","shape","string","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,KAAK,GACT,UACAC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CADA,GAEA,GAFA,GAGAF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAHA,GAIA,GAJA,GAKAF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CALA,GAMA,GANA,GAOA,GAPA,GAQA,GATF;AAWA,SAAOH,KAAP;AACD,CAbD;;AAeC,MAAMI,UAAU,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAqB;AACxC,sBACE;AAAS,IAAA,SAAS,EAAET,GAAG,CAACU,UAAxB;AAAA,eACGF,KAAK,iBAAI;AAAI,MAAA,SAAS,EAAER,GAAG,CAACQ,KAAnB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADZ,eAGE;AAAI,MAAA,SAAS,EAAER,GAAG,CAACW,WAAnB;AAAA,gBACGF,KAAK,CAACG,GAAN,CAAU,SAA+B;AAAA,YAA9B;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,KAAN;AAAaC,UAAAA;AAAb,SAA8B;AACxC,4BACE;AACE,UAAA,SAAS,EAAEf,GAAG,CAACS,KADjB;AAGE,UAAA,KAAK,EAAE;AAAEO,YAAAA,eAAe,EAAEd,WAAW;AAA9B,WAHT;AAAA,kCAKE;AAAM,YAAA,SAAS,EAAEF,GAAG,CAACc,KAArB;AAAA,sBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAM,YAAA,SAAS,EAAEd,GAAG,CAACe,UAArB;AAAA,sBAAkCA;AAAlC;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAEOF,EAFP;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD,OAXA;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArBA;;KAAMN,U;AAuBNA,UAAU,CAACN,SAAX,GAAuB;AACrBQ,EAAAA,KAAK,EAAER,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,KAAV,CAAgB;AACxCL,IAAAA,EAAE,EAAEZ,SAAS,CAACkB,MAAV,CAAiBC,UADmB;AAExCN,IAAAA,KAAK,EAAEb,SAAS,CAACkB,MAAV,CAAiBC,UAFgB;AAGxCL,IAAAA,UAAU,EAAEd,SAAS,CAACoB,MAAV,CAAiBD;AAHW,GAAhB,CAAlB,CADc;AAMtBZ,EAAAA,KAAK,EAAEP,SAAS,CAACkB;AANK,CAAvB;AASD,eAAeZ,UAAf","sourcesContent":["import React from 'react';\r\nimport css from './Statistics.module.css';\r\nimport propTypes from 'prop-types';\r\n\r\nconst createColor = () => {\r\n  const color =\r\n    'rgba(' +\r\n    Math.round(Math.random() * 255) +\r\n    ',' +\r\n    Math.round(Math.random() * 255) +\r\n    ',' +\r\n    Math.round(Math.random() * 255) +\r\n    ',' +\r\n    0.7 +\r\n    ')';\r\n\r\n  return color;\r\n};\r\n\r\n const Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={css.statistics}>\r\n      {title && <h2 className={css.title}>{title}</h2>}\r\n\r\n      <ul className={css.stats__list}>\r\n        {stats.map(({ id, label, percentage }) => {\r\n          return (\r\n            <li\r\n              className={css.stats}\r\n              key={id}\r\n              style={{ backgroundColor: createColor() }}\r\n            >\r\n              <span className={css.label}>{label}</span>\r\n              <span className={css.percentage}>{percentage}</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\n Statistics.propTypes = {\r\n   stats: propTypes.arrayOf(propTypes.shape({\r\n    id: propTypes.string.isRequired,\r\n    label: propTypes.string.isRequired,\r\n    percentage: propTypes.number.isRequired,\r\n  })),\r\n  title: propTypes.string,\r\n};\r\n\r\nexport default Statistics;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}